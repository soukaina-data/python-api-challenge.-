{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# WeatherPy\n",
    "----\n",
    "\n",
    "#### Note\n",
    "* Instructions have been included for each segment. You do not have to follow them exactly, but they are included to help you think through the steps."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# Dependencies and Setup\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import requests as rq\n",
    "import time\n",
    "\n",
    "# Import API key\n",
    "from api_keys import api_key\n",
    "\n",
    "# Incorporated citipy to determine city based on latitude and longitude\n",
    "from citipy import citipy\n",
    "\n",
    "# Output File (CSV)\n",
    "output_data_file = \"../cities.csv\"\n",
    "\n",
    "# Range of latitudes and longitudes\n",
    "lat_range = (-90, 90)\n",
    "lng_range = (-180, 180)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Generate Cities List"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "611"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# List for holding lat_lngs and cities\n",
    "lat_lngs = []\n",
    "cities = []\n",
    "\n",
    "# Create a set of random lat and lng combinations\n",
    "lats = np.random.uniform(low=-90.000, high=90.000, size=1500)\n",
    "lngs = np.random.uniform(low=-180.000, high=180.000, size=1500)\n",
    "lat_lngs = zip(lats, lngs)\n",
    "\n",
    "# Identify nearest city for each lat, lng combination\n",
    "for lat_lng in lat_lngs:\n",
    "    city = citipy.nearest_city(lat_lng[0], lat_lng[1]).city_name\n",
    "    \n",
    "    # If the city is unique, then add it to a our cities list\n",
    "    if city not in cities:\n",
    "        cities.append(city)\n",
    "\n",
    "# Print the city count to confirm sufficient count\n",
    "len(cities)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Perform API Calls\n",
    "* Perform a weather check on each city using a series of successive API calls.\n",
    "* Include a print log of each city as it'sbeing processed (with the city number and city name).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Begining Data Retrieval\n",
      "----------------\n",
      "Processing record 1 of set 1 | nikolskoye\n",
      "City nikolskoye found and added\n",
      "Processing record 2 of set 1 | brae\n",
      "City brae found and added\n",
      "Processing record 3 of set 1 | hermanus\n",
      "City hermanus found and added\n",
      "Processing record 4 of set 1 | lavrentiya\n",
      "City lavrentiya found and added\n",
      "Processing record 5 of set 1 | port hardy\n",
      "City port hardy found and added\n",
      "Processing record 6 of set 1 | ola\n",
      "City ola found and added\n",
      "Processing record 7 of set 1 | guerrero negro\n",
      "City guerrero negro found and added\n",
      "Processing record 8 of set 1 | taolanaro\n",
      "City taolanaro not found.  Skipping...\n",
      "Processing record 9 of set 1 | punta arenas\n",
      "City punta arenas found and added\n",
      "Processing record 10 of set 1 | galesong\n",
      "City galesong found and added\n",
      "Processing record 11 of set 1 | lata\n",
      "City lata found and added\n",
      "Processing record 12 of set 1 | mar del plata\n",
      "City mar del plata found and added\n",
      "Processing record 13 of set 1 | port elizabeth\n",
      "City port elizabeth found and added\n",
      "Processing record 14 of set 1 | lucapa\n",
      "City lucapa found and added\n",
      "Processing record 15 of set 1 | marcona\n",
      "City marcona not found.  Skipping...\n",
      "Processing record 16 of set 1 | castro\n",
      "City castro found and added\n",
      "Processing record 17 of set 1 | binzhou\n",
      "City binzhou found and added\n",
      "Processing record 18 of set 1 | miandrivazo\n",
      "City miandrivazo found and added\n",
      "Processing record 19 of set 1 | mut\n",
      "City mut found and added\n",
      "Processing record 20 of set 1 | lebu\n",
      "City lebu found and added\n",
      "Processing record 21 of set 1 | bereda\n",
      "City bereda found and added\n",
      "Processing record 22 of set 1 | mahebourg\n",
      "City mahebourg found and added\n",
      "Processing record 23 of set 1 | busselton\n",
      "City busselton found and added\n",
      "Processing record 24 of set 1 | atagay\n",
      "City atagay found and added\n",
      "Processing record 25 of set 1 | maltahohe\n",
      "City maltahohe found and added\n",
      "Processing record 26 of set 1 | westport\n",
      "City westport found and added\n",
      "Processing record 27 of set 1 | tiksi\n",
      "City tiksi found and added\n",
      "Processing record 28 of set 1 | antofagasta\n",
      "City antofagasta found and added\n",
      "Processing record 29 of set 1 | ushuaia\n",
      "City ushuaia found and added\n",
      "Processing record 30 of set 1 | tasiilaq\n",
      "City tasiilaq found and added\n",
      "Processing record 31 of set 1 | kishi\n",
      "City kishi found and added\n",
      "Processing record 32 of set 1 | tocopilla\n",
      "City tocopilla found and added\n",
      "Processing record 33 of set 1 | pevek\n",
      "City pevek found and added\n",
      "Processing record 34 of set 1 | barrow\n",
      "City barrow found and added\n",
      "Processing record 35 of set 1 | kattivakkam\n",
      "City kattivakkam found and added\n",
      "Processing record 36 of set 1 | salalah\n",
      "City salalah found and added\n",
      "Processing record 37 of set 1 | albany\n",
      "City albany found and added\n",
      "Processing record 38 of set 1 | cape coast\n",
      "City cape coast found and added\n",
      "Processing record 39 of set 1 | arlit\n",
      "City arlit found and added\n",
      "Processing record 40 of set 1 | mahbubabad\n",
      "City mahbubabad found and added\n",
      "Processing record 41 of set 1 | bubaque\n",
      "City bubaque found and added\n",
      "Processing record 42 of set 1 | vaasa\n",
      "City vaasa found and added\n",
      "Processing record 43 of set 1 | codrington\n",
      "City codrington found and added\n",
      "Processing record 44 of set 1 | yellowknife\n",
      "City yellowknife found and added\n",
      "Processing record 45 of set 1 | sao filipe\n",
      "City sao filipe found and added\n",
      "Processing record 46 of set 1 | rikitea\n",
      "City rikitea found and added\n",
      "Processing record 47 of set 1 | narsaq\n",
      "City narsaq found and added\n",
      "Processing record 48 of set 1 | linxia\n",
      "City linxia found and added\n",
      "Processing record 49 of set 1 | puerto ayora\n",
      "City puerto ayora found and added\n",
      "Processing record 50 of set 1 | bluff\n",
      "City bluff found and added\n",
      "Processing record 0 of set 2 | inhambane\n",
      "City inhambane found and added\n",
      "Processing record 1 of set 2 | qaanaaq\n",
      "City qaanaaq found and added\n",
      "Processing record 2 of set 2 | la spezia\n",
      "City la spezia found and added\n",
      "Processing record 3 of set 2 | gat\n",
      "City gat found and added\n",
      "Processing record 4 of set 2 | zhaotong\n",
      "City zhaotong found and added\n",
      "Processing record 5 of set 2 | pangody\n",
      "City pangody found and added\n",
      "Processing record 6 of set 2 | dikson\n",
      "City dikson found and added\n",
      "Processing record 7 of set 2 | sao joao da barra\n",
      "City sao joao da barra found and added\n",
      "Processing record 8 of set 2 | tiznit\n",
      "City tiznit found and added\n",
      "Processing record 9 of set 2 | marsabit\n",
      "City marsabit found and added\n",
      "Processing record 10 of set 2 | chuy\n",
      "City chuy found and added\n",
      "Processing record 11 of set 2 | port alfred\n",
      "City port alfred found and added\n",
      "Processing record 12 of set 2 | pakruojis\n",
      "City pakruojis found and added\n",
      "Processing record 13 of set 2 | hamilton\n",
      "City hamilton found and added\n",
      "Processing record 14 of set 2 | mataura\n",
      "City mataura found and added\n",
      "Processing record 15 of set 2 | ejido\n",
      "City ejido found and added\n",
      "Processing record 16 of set 2 | ios\n",
      "City ios found and added\n",
      "Processing record 17 of set 2 | illoqqortoormiut\n",
      "City illoqqortoormiut not found.  Skipping...\n",
      "Processing record 18 of set 2 | mokrousovo\n",
      "City mokrousovo found and added\n",
      "Processing record 19 of set 2 | karaul\n",
      "City karaul not found.  Skipping...\n",
      "Processing record 20 of set 2 | vitim\n",
      "City vitim found and added\n",
      "Processing record 21 of set 2 | cherskiy\n",
      "City cherskiy found and added\n",
      "Processing record 22 of set 2 | patea\n",
      "City patea found and added\n",
      "Processing record 23 of set 2 | kyzyl-suu\n",
      "City kyzyl-suu found and added\n",
      "Processing record 24 of set 2 | petauke\n",
      "City petauke found and added\n",
      "Processing record 25 of set 2 | belushya guba\n",
      "City belushya guba not found.  Skipping...\n",
      "Processing record 26 of set 2 | hobart\n",
      "City hobart found and added\n",
      "Processing record 27 of set 2 | airai\n",
      "City airai found and added\n",
      "Processing record 28 of set 2 | shache\n",
      "City shache found and added\n",
      "Processing record 29 of set 2 | ilulissat\n",
      "City ilulissat found and added\n",
      "Processing record 30 of set 2 | atuona\n",
      "City atuona found and added\n",
      "Processing record 31 of set 2 | nandu\n",
      "City nandu found and added\n",
      "Processing record 32 of set 2 | hithadhoo\n",
      "City hithadhoo found and added\n",
      "Processing record 33 of set 2 | ayorou\n",
      "City ayorou found and added\n",
      "Processing record 34 of set 2 | bhigvan\n",
      "City bhigvan found and added\n",
      "Processing record 35 of set 2 | galveston\n",
      "City galveston found and added\n",
      "Processing record 36 of set 2 | sligo\n",
      "City sligo found and added\n",
      "Processing record 37 of set 2 | oistins\n",
      "City oistins found and added\n",
      "Processing record 38 of set 2 | padang\n",
      "City padang found and added\n",
      "Processing record 39 of set 2 | broome\n",
      "City broome found and added\n",
      "Processing record 40 of set 2 | mabaruma\n",
      "City mabaruma found and added\n",
      "Processing record 41 of set 2 | atambua\n",
      "City atambua found and added\n",
      "Processing record 42 of set 2 | pimentel\n",
      "City pimentel found and added\n",
      "Processing record 43 of set 2 | kapaa\n",
      "City kapaa found and added\n",
      "Processing record 44 of set 2 | attawapiskat\n",
      "City attawapiskat not found.  Skipping...\n",
      "Processing record 45 of set 2 | nuuk\n",
      "City nuuk found and added\n",
      "Processing record 46 of set 2 | qidong\n",
      "City qidong found and added\n",
      "Processing record 47 of set 2 | moengo\n",
      "City moengo found and added\n",
      "Processing record 48 of set 2 | bredasdorp\n",
      "City bredasdorp found and added\n",
      "Processing record 49 of set 2 | sentyabrskiy\n",
      "City sentyabrskiy not found.  Skipping...\n",
      "Processing record 0 of set 3 | paoua\n",
      "City paoua found and added\n",
      "Processing record 1 of set 3 | asau\n",
      "City asau found and added\n",
      "Processing record 2 of set 3 | huaraz\n",
      "City huaraz found and added\n",
      "Processing record 3 of set 3 | krasnoarmeysk\n",
      "City krasnoarmeysk found and added\n",
      "Processing record 4 of set 3 | tianpeng\n",
      "City tianpeng found and added\n",
      "Processing record 5 of set 3 | buraydah\n",
      "City buraydah found and added\n",
      "Processing record 6 of set 3 | thompson\n",
      "City thompson found and added\n",
      "Processing record 7 of set 3 | ketchikan\n",
      "City ketchikan found and added\n",
      "Processing record 8 of set 3 | grand river south east\n",
      "City grand river south east not found.  Skipping...\n",
      "Processing record 9 of set 3 | hue\n",
      "City hue found and added\n",
      "Processing record 10 of set 3 | khatanga\n",
      "City khatanga found and added\n",
      "Processing record 11 of set 3 | avarua\n",
      "City avarua found and added\n",
      "Processing record 12 of set 3 | comodoro rivadavia\n",
      "City comodoro rivadavia found and added\n",
      "Processing record 13 of set 3 | touros\n",
      "City touros found and added\n",
      "Processing record 14 of set 3 | copiapo\n",
      "City copiapo found and added\n",
      "Processing record 15 of set 3 | kahului\n",
      "City kahului found and added\n",
      "Processing record 16 of set 3 | amderma\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "City amderma not found.  Skipping...\n",
      "Processing record 17 of set 3 | harbour breton\n",
      "City harbour breton found and added\n",
      "Processing record 18 of set 3 | purranque\n",
      "City purranque found and added\n",
      "Processing record 19 of set 3 | makokou\n",
      "City makokou found and added\n",
      "Processing record 20 of set 3 | lensk\n",
      "City lensk found and added\n",
      "Processing record 21 of set 3 | geraldton\n",
      "City geraldton found and added\n",
      "Processing record 22 of set 3 | san cristobal\n",
      "City san cristobal found and added\n",
      "Processing record 23 of set 3 | butaritari\n",
      "City butaritari found and added\n",
      "Processing record 24 of set 3 | barentsburg\n",
      "City barentsburg not found.  Skipping...\n",
      "Processing record 25 of set 3 | chestermere\n",
      "City chestermere found and added\n",
      "Processing record 26 of set 3 | yilan\n",
      "City yilan found and added\n",
      "Processing record 27 of set 3 | vao\n",
      "City vao found and added\n",
      "Processing record 28 of set 3 | matara\n",
      "City matara found and added\n",
      "Processing record 29 of set 3 | vaini\n",
      "City vaini found and added\n",
      "Processing record 30 of set 3 | lagoa\n",
      "City lagoa found and added\n",
      "Processing record 31 of set 3 | la primavera\n",
      "City la primavera found and added\n",
      "Processing record 32 of set 3 | moron\n",
      "City moron found and added\n",
      "Processing record 33 of set 3 | ye\n",
      "City ye not found.  Skipping...\n",
      "Processing record 34 of set 3 | saskylakh\n",
      "City saskylakh found and added\n",
      "Processing record 35 of set 3 | makambako\n",
      "City makambako found and added\n",
      "Processing record 36 of set 3 | souillac\n",
      "City souillac found and added\n",
      "Processing record 37 of set 3 | nizhneyansk\n",
      "City nizhneyansk not found.  Skipping...\n",
      "Processing record 38 of set 3 | srednekolymsk\n",
      "City srednekolymsk found and added\n",
      "Processing record 39 of set 3 | yenagoa\n",
      "City yenagoa found and added\n",
      "Processing record 40 of set 3 | chokurdakh\n",
      "City chokurdakh found and added\n",
      "Processing record 41 of set 3 | oussouye\n",
      "City oussouye found and added\n",
      "Processing record 42 of set 3 | hilo\n",
      "City hilo found and added\n",
      "Processing record 43 of set 3 | cape town\n",
      "City cape town found and added\n",
      "Processing record 44 of set 3 | goedereede\n",
      "City goedereede found and added\n",
      "Processing record 45 of set 3 | yamada\n",
      "City yamada found and added\n",
      "Processing record 46 of set 3 | suez\n",
      "City suez found and added\n",
      "Processing record 47 of set 3 | plettenberg bay\n",
      "City plettenberg bay found and added\n",
      "Processing record 48 of set 3 | powell river\n",
      "City powell river found and added\n",
      "Processing record 49 of set 3 | katsuura\n",
      "City katsuura found and added\n",
      "Processing record 0 of set 4 | new norfolk\n",
      "City new norfolk found and added\n",
      "Processing record 1 of set 4 | kieta\n",
      "City kieta found and added\n",
      "Processing record 2 of set 4 | kavaratti\n",
      "City kavaratti found and added\n",
      "Processing record 3 of set 4 | kalabo\n",
      "City kalabo found and added\n",
      "Processing record 4 of set 4 | kavant\n",
      "City kavant not found.  Skipping...\n",
      "Processing record 5 of set 4 | quatre cocos\n",
      "City quatre cocos found and added\n",
      "Processing record 6 of set 4 | paragominas\n",
      "City paragominas found and added\n",
      "Processing record 7 of set 4 | boende\n",
      "City boende found and added\n",
      "Processing record 8 of set 4 | east london\n",
      "City east london found and added\n",
      "Processing record 9 of set 4 | saint-philippe\n",
      "City saint-philippe found and added\n",
      "Processing record 10 of set 4 | lodja\n",
      "City lodja found and added\n",
      "Processing record 11 of set 4 | ewa beach\n",
      "City ewa beach found and added\n",
      "Processing record 12 of set 4 | kruisfontein\n",
      "City kruisfontein found and added\n",
      "Processing record 13 of set 4 | warqla\n",
      "City warqla not found.  Skipping...\n",
      "Processing record 14 of set 4 | jamestown\n",
      "City jamestown found and added\n",
      "Processing record 15 of set 4 | mont-joli\n",
      "City mont-joli found and added\n",
      "Processing record 16 of set 4 | remontnoye\n",
      "City remontnoye found and added\n",
      "Processing record 17 of set 4 | bengkulu\n",
      "City bengkulu found and added\n",
      "Processing record 18 of set 4 | hasaki\n",
      "City hasaki found and added\n",
      "Processing record 19 of set 4 | carutapera\n",
      "City carutapera found and added\n",
      "Processing record 20 of set 4 | avera\n",
      "City avera found and added\n",
      "Processing record 21 of set 4 | kodiak\n",
      "City kodiak found and added\n",
      "Processing record 22 of set 4 | haimen\n",
      "City haimen found and added\n",
      "Processing record 23 of set 4 | victoria\n",
      "City victoria found and added\n",
      "Processing record 24 of set 4 | nouadhibou\n",
      "City nouadhibou found and added\n",
      "Processing record 25 of set 4 | arraial do cabo\n",
      "City arraial do cabo found and added\n",
      "Processing record 26 of set 4 | razole\n",
      "City razole found and added\n",
      "Processing record 27 of set 4 | udachnyy\n",
      "City udachnyy found and added\n",
      "Processing record 28 of set 4 | saint-pierre\n",
      "City saint-pierre found and added\n",
      "Processing record 29 of set 4 | kampot\n",
      "City kampot found and added\n",
      "Processing record 30 of set 4 | merauke\n",
      "City merauke found and added\n",
      "Processing record 31 of set 4 | kurilsk\n",
      "City kurilsk found and added\n",
      "Processing record 32 of set 4 | saleaula\n",
      "City saleaula not found.  Skipping...\n",
      "Processing record 33 of set 4 | oranjemund\n",
      "City oranjemund found and added\n",
      "Processing record 34 of set 4 | kazalinsk\n",
      "City kazalinsk not found.  Skipping...\n",
      "Processing record 35 of set 4 | georgetown\n",
      "City georgetown found and added\n",
      "Processing record 36 of set 4 | coquimbo\n",
      "City coquimbo found and added\n",
      "Processing record 37 of set 4 | sechura\n",
      "City sechura found and added\n",
      "Processing record 38 of set 4 | quartucciu\n",
      "City quartucciu found and added\n",
      "Processing record 39 of set 4 | keti bandar\n",
      "City keti bandar found and added\n",
      "Processing record 40 of set 4 | naze\n",
      "City naze found and added\n",
      "Processing record 41 of set 4 | namibe\n",
      "City namibe found and added\n",
      "Processing record 42 of set 4 | karratha\n",
      "City karratha found and added\n",
      "Processing record 43 of set 4 | biloela\n",
      "City biloela found and added\n",
      "Processing record 44 of set 4 | kailua\n",
      "City kailua found and added\n",
      "Processing record 45 of set 4 | huarmey\n",
      "City huarmey found and added\n",
      "Processing record 46 of set 4 | labutta\n",
      "City labutta not found.  Skipping...\n",
      "Processing record 47 of set 4 | qarchak\n",
      "City qarchak found and added\n",
      "Processing record 48 of set 4 | kalmunai\n",
      "City kalmunai found and added\n",
      "Processing record 49 of set 4 | hofn\n",
      "City hofn found and added\n",
      "Processing record 0 of set 5 | olafsvik\n",
      "City olafsvik found and added\n",
      "Processing record 1 of set 5 | norsup\n",
      "City norsup found and added\n",
      "Processing record 2 of set 5 | campbell river\n",
      "City campbell river found and added\n",
      "Processing record 3 of set 5 | leningradskiy\n",
      "City leningradskiy found and added\n",
      "Processing record 4 of set 5 | aquidauana\n",
      "City aquidauana found and added\n",
      "Processing record 5 of set 5 | alta floresta\n",
      "City alta floresta found and added\n",
      "Processing record 6 of set 5 | hami\n",
      "City hami found and added\n",
      "Processing record 7 of set 5 | trinidad\n",
      "City trinidad found and added\n",
      "Processing record 8 of set 5 | bambous virieux\n",
      "City bambous virieux found and added\n",
      "Processing record 9 of set 5 | klaksvik\n",
      "City klaksvik found and added\n",
      "Processing record 10 of set 5 | kargala\n",
      "City kargala found and added\n",
      "Processing record 11 of set 5 | kununurra\n",
      "City kununurra found and added\n",
      "Processing record 12 of set 5 | zurrieq\n",
      "City zurrieq found and added\n",
      "Processing record 13 of set 5 | marfino\n",
      "City marfino found and added\n",
      "Processing record 14 of set 5 | norman wells\n",
      "City norman wells found and added\n",
      "Processing record 15 of set 5 | tshikapa\n",
      "City tshikapa found and added\n",
      "Processing record 16 of set 5 | formoso do araguaia\n",
      "City formoso do araguaia not found.  Skipping...\n",
      "Processing record 17 of set 5 | reporoa\n",
      "City reporoa found and added\n",
      "Processing record 18 of set 5 | carnarvon\n",
      "City carnarvon found and added\n",
      "Processing record 19 of set 5 | mullaitivu\n",
      "City mullaitivu not found.  Skipping...\n",
      "Processing record 20 of set 5 | atasu\n",
      "City atasu found and added\n",
      "Processing record 21 of set 5 | nantucket\n",
      "City nantucket found and added\n",
      "Processing record 22 of set 5 | balikpapan\n",
      "City balikpapan found and added\n",
      "Processing record 23 of set 5 | tsihombe\n",
      "City tsihombe not found.  Skipping...\n",
      "Processing record 24 of set 5 | selenginsk\n",
      "City selenginsk found and added\n",
      "Processing record 25 of set 5 | coahuayana\n",
      "City coahuayana found and added\n",
      "Processing record 26 of set 5 | hatillo\n",
      "City hatillo found and added\n",
      "Processing record 27 of set 5 | caraballeda\n",
      "City caraballeda found and added\n",
      "Processing record 28 of set 5 | mudgal\n",
      "City mudgal found and added\n",
      "Processing record 29 of set 5 | vila franca do campo\n",
      "City vila franca do campo found and added\n",
      "Processing record 30 of set 5 | bathsheba\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "City bathsheba found and added\n",
      "Processing record 31 of set 5 | ancud\n",
      "City ancud found and added\n",
      "Processing record 32 of set 5 | vila velha\n",
      "City vila velha found and added\n",
      "Processing record 33 of set 5 | coos bay\n",
      "City coos bay found and added\n",
      "Processing record 34 of set 5 | palabuhanratu\n",
      "City palabuhanratu not found.  Skipping...\n",
      "Processing record 35 of set 5 | impfondo\n",
      "City impfondo found and added\n",
      "Processing record 36 of set 5 | ponta do sol\n",
      "City ponta do sol found and added\n",
      "Processing record 37 of set 5 | bilibino\n",
      "City bilibino found and added\n",
      "Processing record 38 of set 5 | esperance\n",
      "City esperance found and added\n",
      "Processing record 39 of set 5 | madison\n",
      "City madison found and added\n",
      "Processing record 40 of set 5 | beringovskiy\n",
      "City beringovskiy found and added\n",
      "Processing record 41 of set 5 | namtsy\n",
      "City namtsy found and added\n",
      "Processing record 42 of set 5 | sterling\n",
      "City sterling found and added\n",
      "Processing record 43 of set 5 | hauterive\n",
      "City hauterive found and added\n",
      "Processing record 44 of set 5 | meulaboh\n",
      "City meulaboh found and added\n",
      "Processing record 45 of set 5 | the pas\n",
      "City the pas found and added\n",
      "Processing record 46 of set 5 | faanui\n",
      "City faanui found and added\n",
      "Processing record 47 of set 5 | shingu\n",
      "City shingu found and added\n",
      "Processing record 48 of set 5 | bokspits\n",
      "City bokspits not found.  Skipping...\n",
      "Processing record 49 of set 5 | ndele\n",
      "City ndele found and added\n",
      "Processing record 0 of set 6 | vestbygda\n",
      "City vestbygda not found.  Skipping...\n",
      "Processing record 1 of set 6 | graaff-reinet\n",
      "City graaff-reinet found and added\n",
      "Processing record 2 of set 6 | cabo san lucas\n",
      "City cabo san lucas found and added\n",
      "Processing record 3 of set 6 | hambantota\n",
      "City hambantota found and added\n",
      "Processing record 4 of set 6 | yagodnoye\n",
      "City yagodnoye found and added\n",
      "Processing record 5 of set 6 | astipalaia\n",
      "City astipalaia not found.  Skipping...\n",
      "Processing record 6 of set 6 | kamen-rybolov\n",
      "City kamen-rybolov found and added\n",
      "Processing record 7 of set 6 | vastse-kuuste\n",
      "City vastse-kuuste found and added\n",
      "Processing record 8 of set 6 | fevralsk\n",
      "City fevralsk not found.  Skipping...\n",
      "Processing record 9 of set 6 | namatanai\n",
      "City namatanai found and added\n",
      "Processing record 10 of set 6 | port lincoln\n",
      "City port lincoln found and added\n",
      "Processing record 11 of set 6 | isla vista\n",
      "City isla vista found and added\n",
      "Processing record 12 of set 6 | bouafle\n",
      "City bouafle found and added\n",
      "Processing record 13 of set 6 | shumyachi\n",
      "City shumyachi found and added\n",
      "Processing record 14 of set 6 | upernavik\n",
      "City upernavik found and added\n",
      "Processing record 15 of set 6 | mersing\n",
      "City mersing found and added\n",
      "Processing record 16 of set 6 | nanortalik\n",
      "City nanortalik found and added\n",
      "Processing record 17 of set 6 | paraiso\n",
      "City paraiso found and added\n",
      "Processing record 18 of set 6 | luderitz\n",
      "City luderitz found and added\n",
      "Processing record 19 of set 6 | springbok\n",
      "City springbok found and added\n",
      "Processing record 20 of set 6 | kinwat\n",
      "City kinwat found and added\n",
      "Processing record 21 of set 6 | calabozo\n",
      "City calabozo found and added\n",
      "Processing record 22 of set 6 | sedalia\n",
      "City sedalia found and added\n",
      "Processing record 23 of set 6 | paracuru\n",
      "City paracuru found and added\n",
      "Processing record 24 of set 6 | bethel\n",
      "City bethel found and added\n",
      "Processing record 25 of set 6 | khani\n",
      "City khani found and added\n",
      "Processing record 26 of set 6 | calatayud\n",
      "City calatayud found and added\n",
      "Processing record 27 of set 6 | katangli\n",
      "City katangli found and added\n",
      "Processing record 28 of set 6 | puerto palomas\n",
      "City puerto palomas found and added\n",
      "Processing record 29 of set 6 | severo-kurilsk\n",
      "City severo-kurilsk found and added\n",
      "Processing record 30 of set 6 | provideniya\n",
      "City provideniya found and added\n",
      "Processing record 31 of set 6 | phalombe\n",
      "City phalombe found and added\n",
      "Processing record 32 of set 6 | tezu\n",
      "City tezu found and added\n",
      "Processing record 33 of set 6 | bakchar\n",
      "City bakchar found and added\n",
      "Processing record 34 of set 6 | grand-lahou\n",
      "City grand-lahou found and added\n",
      "Processing record 35 of set 6 | lompoc\n",
      "City lompoc found and added\n",
      "Processing record 36 of set 6 | mahajanga\n",
      "City mahajanga found and added\n",
      "Processing record 37 of set 6 | panaba\n",
      "City panaba found and added\n",
      "Processing record 38 of set 6 | tuktoyaktuk\n",
      "City tuktoyaktuk found and added\n",
      "Processing record 39 of set 6 | gomel\n",
      "City gomel found and added\n",
      "Processing record 40 of set 6 | doctor pedro p. pena\n",
      "City doctor pedro p. pena not found.  Skipping...\n",
      "Processing record 41 of set 6 | dukat\n",
      "City dukat found and added\n",
      "Processing record 42 of set 6 | samusu\n",
      "City samusu not found.  Skipping...\n",
      "Processing record 43 of set 6 | nagato\n",
      "City nagato found and added\n",
      "Processing record 44 of set 6 | bom jesus\n",
      "City bom jesus found and added\n",
      "Processing record 45 of set 6 | christchurch\n",
      "City christchurch found and added\n",
      "Processing record 46 of set 6 | bandarbeyla\n",
      "City bandarbeyla found and added\n",
      "Processing record 47 of set 6 | kiomboi\n",
      "City kiomboi found and added\n",
      "Processing record 48 of set 6 | palembang\n",
      "City palembang found and added\n",
      "Processing record 49 of set 6 | port blair\n",
      "City port blair found and added\n",
      "Processing record 0 of set 7 | freeport\n",
      "City freeport found and added\n",
      "Processing record 1 of set 7 | samalaeulu\n",
      "City samalaeulu not found.  Skipping...\n",
      "Processing record 2 of set 7 | trindade\n",
      "City trindade found and added\n",
      "Processing record 3 of set 7 | mount gambier\n",
      "City mount gambier found and added\n",
      "Processing record 4 of set 7 | ribeira grande\n",
      "City ribeira grande found and added\n",
      "Processing record 5 of set 7 | xadani\n",
      "City xadani not found.  Skipping...\n",
      "Processing record 6 of set 7 | ugoofaaru\n",
      "City ugoofaaru found and added\n",
      "Processing record 7 of set 7 | tungkang\n",
      "City tungkang not found.  Skipping...\n",
      "Processing record 8 of set 7 | crib point\n",
      "City crib point found and added\n",
      "Processing record 9 of set 7 | port macquarie\n",
      "City port macquarie found and added\n",
      "Processing record 10 of set 7 | te anau\n",
      "City te anau found and added\n",
      "Processing record 11 of set 7 | poum\n",
      "City poum found and added\n",
      "Processing record 12 of set 7 | tateyama\n",
      "City tateyama found and added\n",
      "Processing record 13 of set 7 | acapulco\n",
      "City acapulco found and added\n",
      "Processing record 14 of set 7 | saldanha\n",
      "City saldanha found and added\n",
      "Processing record 15 of set 7 | sale\n",
      "City sale found and added\n",
      "Processing record 16 of set 7 | lasa\n",
      "City lasa found and added\n",
      "Processing record 17 of set 7 | maragogi\n",
      "City maragogi found and added\n",
      "Processing record 18 of set 7 | illapel\n",
      "City illapel found and added\n",
      "Processing record 19 of set 7 | komsomolskiy\n",
      "City komsomolskiy found and added\n",
      "Processing record 20 of set 7 | fortuna\n",
      "City fortuna found and added\n",
      "Processing record 21 of set 7 | altamira\n",
      "City altamira found and added\n",
      "Processing record 22 of set 7 | tabou\n",
      "City tabou found and added\n",
      "Processing record 23 of set 7 | longyearbyen\n",
      "City longyearbyen found and added\n",
      "Processing record 24 of set 7 | morgan city\n",
      "City morgan city found and added\n",
      "Processing record 25 of set 7 | lamar\n",
      "City lamar found and added\n",
      "Processing record 26 of set 7 | peekskill\n",
      "City peekskill found and added\n",
      "Processing record 27 of set 7 | clyde river\n",
      "City clyde river found and added\n",
      "Processing record 28 of set 7 | bilma\n",
      "City bilma found and added\n",
      "Processing record 29 of set 7 | siniscola\n",
      "City siniscola found and added\n",
      "Processing record 30 of set 7 | manaus\n",
      "City manaus found and added\n",
      "Processing record 31 of set 7 | zyryanka\n",
      "City zyryanka found and added\n",
      "Processing record 32 of set 7 | namie\n",
      "City namie found and added\n",
      "Processing record 33 of set 7 | pavlodar\n",
      "City pavlodar found and added\n",
      "Processing record 34 of set 7 | rincon\n",
      "City rincon found and added\n",
      "Processing record 35 of set 7 | abha\n",
      "City abha found and added\n",
      "Processing record 36 of set 7 | mehamn\n",
      "City mehamn found and added\n",
      "Processing record 37 of set 7 | pauini\n",
      "City pauini found and added\n",
      "Processing record 38 of set 7 | dudinka\n",
      "City dudinka found and added\n",
      "Processing record 39 of set 7 | broken hill\n",
      "City broken hill found and added\n",
      "Processing record 40 of set 7 | pontivy\n",
      "City pontivy found and added\n",
      "Processing record 41 of set 7 | san luis\n",
      "City san luis found and added\n",
      "Processing record 42 of set 7 | yar-sale\n",
      "City yar-sale found and added\n",
      "Processing record 43 of set 7 | olonets\n",
      "City olonets found and added\n",
      "Processing record 44 of set 7 | mys shmidta\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "City mys shmidta not found.  Skipping...\n",
      "Processing record 45 of set 7 | wilmington\n",
      "City wilmington found and added\n",
      "Processing record 46 of set 7 | gizo\n",
      "City gizo found and added\n",
      "Processing record 47 of set 7 | cockburn town\n",
      "City cockburn town found and added\n",
      "Processing record 48 of set 7 | salinas\n",
      "City salinas found and added\n",
      "Processing record 49 of set 7 | chapais\n",
      "City chapais found and added\n",
      "Processing record 0 of set 8 | joao pinheiro\n",
      "City joao pinheiro found and added\n",
      "Processing record 1 of set 8 | olinda\n",
      "City olinda found and added\n",
      "Processing record 2 of set 8 | beloha\n",
      "City beloha found and added\n",
      "Processing record 3 of set 8 | bara\n",
      "City bara found and added\n",
      "Processing record 4 of set 8 | sangar\n",
      "City sangar found and added\n",
      "Processing record 5 of set 8 | north myrtle beach\n",
      "City north myrtle beach found and added\n",
      "Processing record 6 of set 8 | port moresby\n",
      "City port moresby found and added\n",
      "Processing record 7 of set 8 | lodwar\n",
      "City lodwar found and added\n",
      "Processing record 8 of set 8 | tevaitoa\n",
      "City tevaitoa found and added\n",
      "Processing record 9 of set 8 | nemuro\n",
      "City nemuro found and added\n",
      "Processing record 10 of set 8 | saraland\n",
      "City saraland found and added\n",
      "Processing record 11 of set 8 | grants pass\n",
      "City grants pass found and added\n",
      "Processing record 12 of set 8 | nioro\n",
      "City nioro found and added\n",
      "Processing record 13 of set 8 | dieppe\n",
      "City dieppe found and added\n",
      "Processing record 14 of set 8 | cheney\n",
      "City cheney found and added\n",
      "Processing record 15 of set 8 | redding\n",
      "City redding found and added\n",
      "Processing record 16 of set 8 | tuatapere\n",
      "City tuatapere found and added\n",
      "Processing record 17 of set 8 | miri\n",
      "City miri found and added\n",
      "Processing record 18 of set 8 | san patricio\n",
      "City san patricio found and added\n",
      "Processing record 19 of set 8 | aksu\n",
      "City aksu found and added\n",
      "Processing record 20 of set 8 | berbera\n",
      "City berbera found and added\n",
      "Processing record 21 of set 8 | cidreira\n",
      "City cidreira found and added\n",
      "Processing record 22 of set 8 | yanan\n",
      "City yanan not found.  Skipping...\n",
      "Processing record 23 of set 8 | najran\n",
      "City najran found and added\n",
      "Processing record 24 of set 8 | vila\n",
      "City vila found and added\n",
      "Processing record 25 of set 8 | surin\n",
      "City surin found and added\n",
      "Processing record 26 of set 8 | pervomayskoye\n",
      "City pervomayskoye found and added\n",
      "Processing record 27 of set 8 | san vicente\n",
      "City san vicente found and added\n",
      "Processing record 28 of set 8 | yuncheng\n",
      "City yuncheng found and added\n",
      "Processing record 29 of set 8 | kaitangata\n",
      "City kaitangata found and added\n",
      "Processing record 30 of set 8 | san buenaventura\n",
      "City san buenaventura found and added\n",
      "Processing record 31 of set 8 | luanda\n",
      "City luanda found and added\n",
      "Processing record 32 of set 8 | maarianhamina\n",
      "City maarianhamina found and added\n",
      "Processing record 33 of set 8 | kendari\n",
      "City kendari found and added\n",
      "Processing record 34 of set 8 | simao\n",
      "City simao found and added\n",
      "Processing record 35 of set 8 | marzuq\n",
      "City marzuq found and added\n",
      "Processing record 36 of set 8 | barra do bugres\n",
      "City barra do bugres found and added\n",
      "Processing record 37 of set 8 | torbay\n",
      "City torbay found and added\n",
      "Processing record 38 of set 8 | haines junction\n",
      "City haines junction found and added\n",
      "Processing record 39 of set 8 | pinawa\n",
      "City pinawa found and added\n",
      "Processing record 40 of set 8 | charters towers\n",
      "City charters towers found and added\n",
      "Processing record 41 of set 8 | karkaralinsk\n",
      "City karkaralinsk not found.  Skipping...\n",
      "Processing record 42 of set 8 | pangai\n",
      "City pangai found and added\n",
      "Processing record 43 of set 8 | petropavlovsk-kamchatskiy\n",
      "City petropavlovsk-kamchatskiy found and added\n",
      "Processing record 44 of set 8 | yulara\n",
      "City yulara found and added\n",
      "Processing record 45 of set 8 | prince rupert\n",
      "City prince rupert found and added\n",
      "Processing record 46 of set 8 | sitka\n",
      "City sitka found and added\n",
      "Processing record 47 of set 8 | ciro marina\n",
      "City ciro marina found and added\n",
      "Processing record 48 of set 8 | pangnirtung\n",
      "City pangnirtung found and added\n",
      "Processing record 49 of set 8 | buin\n",
      "City buin found and added\n",
      "Processing record 0 of set 9 | pisco\n",
      "City pisco found and added\n",
      "Processing record 1 of set 9 | dickinson\n",
      "City dickinson found and added\n",
      "Processing record 2 of set 9 | nova olimpia\n",
      "City nova olimpia found and added\n",
      "Processing record 3 of set 9 | mackay\n",
      "City mackay found and added\n",
      "Processing record 4 of set 9 | ormara\n",
      "City ormara found and added\n",
      "Processing record 5 of set 9 | monrovia\n",
      "City monrovia found and added\n",
      "Processing record 6 of set 9 | tabiauea\n",
      "City tabiauea not found.  Skipping...\n",
      "Processing record 7 of set 9 | osorio\n",
      "City osorio found and added\n",
      "Processing record 8 of set 9 | krasnoselkup\n",
      "City krasnoselkup found and added\n",
      "Processing record 9 of set 9 | kavieng\n",
      "City kavieng found and added\n",
      "Processing record 10 of set 9 | dingle\n",
      "City dingle found and added\n",
      "Processing record 11 of set 9 | sao jose da coroa grande\n",
      "City sao jose da coroa grande found and added\n",
      "Processing record 12 of set 9 | dzerzhinsk\n",
      "City dzerzhinsk found and added\n",
      "Processing record 13 of set 9 | svetlogorsk\n",
      "City svetlogorsk found and added\n",
      "Processing record 14 of set 9 | northam\n",
      "City northam found and added\n",
      "Processing record 15 of set 9 | tulagi\n",
      "City tulagi found and added\n",
      "Processing record 16 of set 9 | verkhoyansk\n",
      "City verkhoyansk found and added\n",
      "Processing record 17 of set 9 | bairiki\n",
      "City bairiki found and added\n",
      "Processing record 18 of set 9 | half moon bay\n",
      "City half moon bay found and added\n",
      "Processing record 19 of set 9 | talnakh\n",
      "City talnakh found and added\n",
      "Processing record 20 of set 9 | tawkar\n",
      "City tawkar not found.  Skipping...\n",
      "Processing record 21 of set 9 | lorengau\n",
      "City lorengau found and added\n",
      "Processing record 22 of set 9 | ust-kuyga\n",
      "City ust-kuyga found and added\n",
      "Processing record 23 of set 9 | adrar\n",
      "City adrar found and added\n",
      "Processing record 24 of set 9 | port-gentil\n",
      "City port-gentil found and added\n",
      "Processing record 25 of set 9 | corinth\n",
      "City corinth found and added\n",
      "Processing record 26 of set 9 | kota\n",
      "City kota found and added\n",
      "Processing record 27 of set 9 | tumannyy\n",
      "City tumannyy not found.  Skipping...\n",
      "Processing record 28 of set 9 | muros\n",
      "City muros found and added\n",
      "Processing record 29 of set 9 | magadan\n",
      "City magadan found and added\n",
      "Processing record 30 of set 9 | davila\n",
      "City davila found and added\n",
      "Processing record 31 of set 9 | suraabad\n",
      "City suraabad found and added\n",
      "Processing record 32 of set 9 | luba\n",
      "City luba found and added\n",
      "Processing record 33 of set 9 | alice springs\n",
      "City alice springs found and added\n",
      "Processing record 34 of set 9 | barabai\n",
      "City barabai found and added\n",
      "Processing record 35 of set 9 | chandbali\n",
      "City chandbali found and added\n",
      "Processing record 36 of set 9 | thano bula khan\n",
      "City thano bula khan not found.  Skipping...\n",
      "Processing record 37 of set 9 | asyut\n",
      "City asyut found and added\n",
      "Processing record 38 of set 9 | baghdad\n",
      "City baghdad found and added\n",
      "Processing record 39 of set 9 | mana\n",
      "City mana found and added\n",
      "Processing record 40 of set 9 | lujan\n",
      "City lujan found and added\n",
      "Processing record 41 of set 9 | rio grande\n",
      "City rio grande found and added\n",
      "Processing record 42 of set 9 | manta\n",
      "City manta found and added\n",
      "Processing record 43 of set 9 | thohoyandou\n",
      "City thohoyandou found and added\n",
      "Processing record 44 of set 9 | praia da vitoria\n",
      "City praia da vitoria found and added\n",
      "Processing record 45 of set 9 | la palma\n",
      "City la palma found and added\n",
      "Processing record 46 of set 9 | ust-omchug\n",
      "City ust-omchug found and added\n",
      "Processing record 47 of set 9 | tabialan\n",
      "City tabialan not found.  Skipping...\n",
      "Processing record 48 of set 9 | mount isa\n",
      "City mount isa found and added\n",
      "Processing record 49 of set 9 | soeng sang\n",
      "City soeng sang found and added\n",
      "Processing record 0 of set 10 | ulladulla\n",
      "City ulladulla found and added\n",
      "Processing record 1 of set 10 | alpena\n",
      "City alpena found and added\n",
      "Processing record 2 of set 10 | kloulklubed\n",
      "City kloulklubed found and added\n",
      "Processing record 3 of set 10 | olga\n",
      "City olga found and added\n",
      "Processing record 4 of set 10 | jahrom\n",
      "City jahrom not found.  Skipping...\n",
      "Processing record 5 of set 10 | fort nelson\n",
      "City fort nelson found and added\n",
      "Processing record 6 of set 10 | aykhal\n",
      "City aykhal found and added\n",
      "Processing record 7 of set 10 | varberg\n",
      "City varberg found and added\n",
      "Processing record 8 of set 10 | salto\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "City salto found and added\n",
      "Processing record 9 of set 10 | cayenne\n",
      "City cayenne found and added\n",
      "Processing record 10 of set 10 | pangoa\n",
      "City pangoa found and added\n",
      "Processing record 11 of set 10 | khandyga\n",
      "City khandyga found and added\n",
      "Processing record 12 of set 10 | ntungamo\n",
      "City ntungamo found and added\n",
      "Processing record 13 of set 10 | byron bay\n",
      "City byron bay found and added\n",
      "Processing record 14 of set 10 | gap\n",
      "City gap found and added\n",
      "Processing record 15 of set 10 | umzimvubu\n",
      "City umzimvubu not found.  Skipping...\n",
      "Processing record 16 of set 10 | sorland\n",
      "City sorland found and added\n",
      "Processing record 17 of set 10 | halalo\n",
      "City halalo not found.  Skipping...\n",
      "Processing record 18 of set 10 | grindavik\n",
      "City grindavik found and added\n",
      "Processing record 19 of set 10 | dzhusaly\n",
      "City dzhusaly not found.  Skipping...\n",
      "Processing record 20 of set 10 | solovetskiy\n",
      "City solovetskiy not found.  Skipping...\n",
      "Processing record 21 of set 10 | green river\n",
      "City green river found and added\n",
      "Processing record 22 of set 10 | hailar\n",
      "City hailar found and added\n",
      "Processing record 23 of set 10 | kiunga\n",
      "City kiunga found and added\n",
      "Processing record 24 of set 10 | thaba-tseka\n",
      "City thaba-tseka found and added\n",
      "Processing record 25 of set 10 | prescott\n",
      "City prescott found and added\n",
      "Processing record 26 of set 10 | flinders\n",
      "City flinders found and added\n",
      "Processing record 27 of set 10 | santa clarita\n",
      "City santa clarita found and added\n",
      "Processing record 28 of set 10 | vestmannaeyjar\n",
      "City vestmannaeyjar found and added\n",
      "Processing record 29 of set 10 | albemarle\n",
      "City albemarle found and added\n",
      "Processing record 30 of set 10 | kananga\n",
      "City kananga found and added\n",
      "Processing record 31 of set 10 | zhicheng\n",
      "City zhicheng found and added\n",
      "Processing record 32 of set 10 | marawi\n",
      "City marawi found and added\n",
      "Processing record 33 of set 10 | russell\n",
      "City russell found and added\n",
      "Processing record 34 of set 10 | hualmay\n",
      "City hualmay found and added\n",
      "Processing record 35 of set 10 | contamana\n",
      "City contamana found and added\n",
      "Processing record 36 of set 10 | lobito\n",
      "City lobito found and added\n",
      "Processing record 37 of set 10 | ibipeba\n",
      "City ibipeba found and added\n",
      "Processing record 38 of set 10 | anadyr\n",
      "City anadyr found and added\n",
      "Processing record 39 of set 10 | saint george\n",
      "City saint george found and added\n",
      "Processing record 40 of set 10 | dole\n",
      "City dole found and added\n",
      "Processing record 41 of set 10 | moerai\n",
      "City moerai found and added\n",
      "Processing record 42 of set 10 | kachug\n",
      "City kachug found and added\n",
      "Processing record 43 of set 10 | thunder bay\n",
      "City thunder bay found and added\n",
      "Processing record 44 of set 10 | palmer\n",
      "City palmer found and added\n",
      "Processing record 45 of set 10 | iqaluit\n",
      "City iqaluit found and added\n",
      "Processing record 46 of set 10 | grand gaube\n",
      "City grand gaube found and added\n",
      "Processing record 47 of set 10 | doha\n",
      "City doha found and added\n",
      "Processing record 48 of set 10 | mecca\n",
      "City mecca found and added\n",
      "Processing record 49 of set 10 | high prairie\n",
      "City high prairie found and added\n",
      "Processing record 0 of set 11 | rovaniemi\n",
      "City rovaniemi found and added\n",
      "Processing record 1 of set 11 | nago\n",
      "City nago found and added\n",
      "Processing record 2 of set 11 | rantepao\n",
      "City rantepao found and added\n",
      "Processing record 3 of set 11 | tsiroanomandidy\n",
      "City tsiroanomandidy found and added\n",
      "Processing record 4 of set 11 | erzin\n",
      "City erzin found and added\n",
      "Processing record 5 of set 11 | kandrian\n",
      "City kandrian found and added\n",
      "Processing record 6 of set 11 | mocuba\n",
      "City mocuba found and added\n",
      "Processing record 7 of set 11 | port hawkesbury\n",
      "City port hawkesbury found and added\n",
      "Processing record 8 of set 11 | vaitupu\n",
      "City vaitupu not found.  Skipping...\n",
      "Processing record 9 of set 11 | kindu\n",
      "City kindu found and added\n",
      "Processing record 10 of set 11 | itarema\n",
      "City itarema found and added\n",
      "Processing record 11 of set 11 | nelson bay\n",
      "City nelson bay found and added\n",
      "Processing record 12 of set 11 | aklavik\n",
      "City aklavik found and added\n",
      "Processing record 13 of set 11 | tigil\n",
      "City tigil found and added\n",
      "Processing record 14 of set 11 | barcelos\n",
      "City barcelos found and added\n",
      "Processing record 15 of set 11 | la asuncion\n",
      "City la asuncion found and added\n",
      "Processing record 16 of set 11 | buala\n",
      "City buala found and added\n",
      "Processing record 17 of set 11 | gerash\n",
      "City gerash found and added\n",
      "Processing record 18 of set 11 | nome\n",
      "City nome found and added\n",
      "Processing record 19 of set 11 | ritchie\n",
      "City ritchie found and added\n",
      "Processing record 20 of set 11 | nha trang\n",
      "City nha trang found and added\n",
      "Processing record 21 of set 11 | jaca\n",
      "City jaca found and added\n",
      "Processing record 22 of set 11 | novaya lyada\n",
      "City novaya lyada found and added\n",
      "Processing record 23 of set 11 | margate\n",
      "City margate found and added\n",
      "Processing record 24 of set 11 | nobeoka\n",
      "City nobeoka found and added\n",
      "Processing record 25 of set 11 | sisimiut\n",
      "City sisimiut found and added\n",
      "Processing record 26 of set 11 | remedios\n",
      "City remedios found and added\n",
      "Processing record 27 of set 11 | budogoshch\n",
      "City budogoshch found and added\n",
      "Processing record 28 of set 11 | damietta\n",
      "City damietta found and added\n",
      "Processing record 29 of set 11 | turayf\n",
      "City turayf found and added\n",
      "Processing record 30 of set 11 | constitucion\n",
      "City constitucion found and added\n",
      "Processing record 31 of set 11 | eregli\n",
      "City eregli found and added\n",
      "Processing record 32 of set 11 | laguna\n",
      "City laguna found and added\n",
      "Processing record 33 of set 11 | baracoa\n",
      "City baracoa found and added\n",
      "Processing record 34 of set 11 | nador\n",
      "City nador found and added\n",
      "Processing record 35 of set 11 | sinop\n",
      "City sinop found and added\n",
      "Processing record 36 of set 11 | gedo\n",
      "City gedo found and added\n",
      "Processing record 37 of set 11 | ottawa\n",
      "City ottawa found and added\n",
      "Processing record 38 of set 11 | la ronge\n",
      "City la ronge found and added\n",
      "Processing record 39 of set 11 | yumen\n",
      "City yumen found and added\n",
      "Processing record 40 of set 11 | iisalmi\n",
      "City iisalmi found and added\n",
      "Processing record 41 of set 11 | yerbogachen\n",
      "City yerbogachen found and added\n",
      "Processing record 42 of set 11 | caramay\n",
      "City caramay found and added\n",
      "Processing record 43 of set 11 | longyan\n",
      "City longyan found and added\n",
      "Processing record 44 of set 11 | mongo\n",
      "City mongo found and added\n",
      "Processing record 45 of set 11 | general roca\n",
      "City general roca found and added\n",
      "Processing record 46 of set 11 | tsogni\n",
      "City tsogni found and added\n",
      "Processing record 47 of set 11 | maldonado\n",
      "City maldonado found and added\n",
      "Processing record 48 of set 11 | malakal\n",
      "City malakal found and added\n",
      "Processing record 49 of set 11 | bergen\n",
      "City bergen found and added\n",
      "Processing record 0 of set 12 | ciras\n",
      "City ciras not found.  Skipping...\n",
      "Processing record 1 of set 12 | denpasar\n",
      "City denpasar found and added\n",
      "Processing record 2 of set 12 | ust-kut\n",
      "City ust-kut found and added\n",
      "Processing record 3 of set 12 | the valley\n",
      "City the valley found and added\n",
      "Processing record 4 of set 12 | ban nahin\n",
      "City ban nahin found and added\n",
      "Processing record 5 of set 12 | ostrovnoy\n",
      "City ostrovnoy found and added\n",
      "Processing record 6 of set 12 | chishan\n",
      "City chishan found and added\n",
      "Processing record 7 of set 12 | cap malheureux\n",
      "City cap malheureux found and added\n",
      "Processing record 8 of set 12 | talakan\n",
      "City talakan found and added\n",
      "Processing record 9 of set 12 | ahipara\n",
      "City ahipara found and added\n",
      "Processing record 10 of set 12 | nizhniy kuranakh\n",
      "City nizhniy kuranakh found and added\n",
      "Processing record 11 of set 12 | bafq\n",
      "City bafq found and added\n",
      "Processing record 12 of set 12 | kytmanovo\n",
      "City kytmanovo found and added\n",
      "Processing record 13 of set 12 | koygorodok\n",
      "City koygorodok found and added\n",
      "Processing record 14 of set 12 | ngukurr\n",
      "City ngukurr not found.  Skipping...\n",
      "Processing record 15 of set 12 | verkhnyaya maksakovka\n",
      "City verkhnyaya maksakovka found and added\n",
      "Processing record 16 of set 12 | severobaykalsk\n",
      "City severobaykalsk found and added\n",
      "Processing record 17 of set 12 | mitsamiouli\n",
      "City mitsamiouli found and added\n",
      "Processing record 18 of set 12 | ryotsu\n",
      "City ryotsu found and added\n",
      "Processing record 19 of set 12 | kamenskoye\n",
      "City kamenskoye not found.  Skipping...\n",
      "Processing record 20 of set 12 | abu dhabi\n",
      "City abu dhabi found and added\n",
      "Processing record 21 of set 12 | basco\n",
      "City basco found and added\n",
      "Processing record 22 of set 12 | sulangan\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "City sulangan found and added\n",
      "Processing record 23 of set 12 | saint anthony\n",
      "City saint anthony found and added\n",
      "Processing record 24 of set 12 | apiai\n",
      "City apiai found and added\n",
      "Processing record 25 of set 12 | hovd\n",
      "City hovd found and added\n",
      "Processing record 26 of set 12 | severo-yeniseyskiy\n",
      "City severo-yeniseyskiy found and added\n",
      "Processing record 27 of set 12 | baruun-urt\n",
      "City baruun-urt found and added\n",
      "Processing record 28 of set 12 | angra\n",
      "City angra not found.  Skipping...\n",
      "Processing record 29 of set 12 | richards bay\n",
      "City richards bay found and added\n",
      "Processing record 30 of set 12 | paamiut\n",
      "City paamiut found and added\n",
      "Processing record 31 of set 12 | soyo\n",
      "City soyo found and added\n",
      "Processing record 32 of set 12 | sheopur\n",
      "City sheopur found and added\n",
      "Processing record 33 of set 12 | itaituba\n",
      "City itaituba found and added\n",
      "Processing record 34 of set 12 | misratah\n",
      "City misratah found and added\n",
      "Processing record 35 of set 12 | amapa\n",
      "City amapa found and added\n",
      "Processing record 36 of set 12 | alofi\n",
      "City alofi found and added\n",
      "Processing record 37 of set 12 | nyurba\n",
      "City nyurba found and added\n",
      "Processing record 38 of set 12 | koutsouras\n",
      "City koutsouras found and added\n",
      "Processing record 39 of set 12 | malwan\n",
      "City malwan not found.  Skipping...\n",
      "Processing record 40 of set 12 | brokopondo\n",
      "City brokopondo found and added\n",
      "Processing record 41 of set 12 | quelimane\n",
      "City quelimane found and added\n",
      "Processing record 42 of set 12 | aravete\n",
      "City aravete found and added\n",
      "Processing record 43 of set 12 | nizhneudinsk\n",
      "City nizhneudinsk found and added\n",
      "Processing record 44 of set 12 | beidao\n",
      "City beidao found and added\n",
      "Processing record 45 of set 12 | eydhafushi\n",
      "City eydhafushi found and added\n",
      "Processing record 46 of set 12 | san jose\n",
      "City san jose found and added\n",
      "Processing record 47 of set 12 | goma\n",
      "City goma found and added\n",
      "Processing record 48 of set 12 | turochak\n",
      "City turochak found and added\n",
      "Processing record 49 of set 12 | sakakah\n",
      "City sakakah found and added\n",
      "Processing record 0 of set 13 | sinkat\n",
      "City sinkat not found.  Skipping...\n",
      "Processing record 1 of set 13 | labuhan\n",
      "City labuhan found and added\n",
      "Processing record 2 of set 13 | miquelon\n",
      "City miquelon found and added\n",
      "Processing record 3 of set 13 | talcahuano\n",
      "City talcahuano found and added\n",
      "Processing record 4 of set 13 | smithers\n",
      "City smithers found and added\n",
      "Processing record 5 of set 13 | benguela\n",
      "City benguela found and added\n",
      "Processing record 6 of set 13 | san rafael\n",
      "City san rafael found and added\n",
      "Processing record 7 of set 13 | atherton\n",
      "City atherton found and added\n",
      "Processing record 8 of set 13 | florence\n",
      "City florence found and added\n",
      "Processing record 9 of set 13 | marsaxlokk\n",
      "City marsaxlokk found and added\n",
      "Processing record 10 of set 13 | tabuk\n",
      "City tabuk found and added\n",
      "===============\n",
      "data retrieval completed\n",
      "===============\n"
     ]
    }
   ],
   "source": [
    "import sys\n",
    "\n",
    "url = \"http://api.openweathermap.org/data/2.5/weather?units=Imperial&APPID=\" + api_key\n",
    "\n",
    "city_data=[]  \n",
    "recor_count = 1\n",
    "set_count= 1\n",
    "\n",
    "print(\"Begining Data Retrieval\")\n",
    "print (\"----------------\")\n",
    "\n",
    "for i, city in enumerate(cities):\n",
    "    if (i%50==0 and i>=50):\n",
    "        set_count+=1\n",
    "        recor_count=0\n",
    "    print(f\"Processing record {recor_count} of set {set_count} | {city}\")\n",
    "    recor_count+=1\n",
    "    city_url=url+\"&q=\"+city\n",
    "    #print(city_url)\n",
    "    \n",
    "    try:\n",
    "        city_weather=rq.get(city_url).json()\n",
    "        city_data.append({ \n",
    "            \"City\": city,\n",
    "            \"Lat\": city_weather[\"coord\"][\"lat\"],\n",
    "            \"Lon\": city_weather[\"coord\"][\"lon\"],\n",
    "            \"Max Temp\": city_weather[\"main\"][\"temp_max\"],\n",
    "            \"Humidity\": city_weather[\"main\"][\"humidity\"],\n",
    "            \"Cloudiness\": city_weather[\"clouds\"][\"all\"],\n",
    "            \"High Winds\": city_weather[\"wind\"][\"speed\"],\n",
    "            \"Country\": city_weather[\"sys\"][\"country\"],\n",
    "            \"Date\": city_weather[\"dt\"],\n",
    "            \n",
    "\n",
    "        })\n",
    "        print(f\"City {city} found and added\")\n",
    "    except:\n",
    "        sys.exc_info()[0]\n",
    "        print(f\"City {city} not found.  Skipping...\")\n",
    "        pass\n",
    "                 \n",
    "print(\"===============\")\n",
    "print(\"data retrieval completed\")\n",
    "print (\"===============\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Convert Raw Data to DataFrame\n",
    "* Export the city data into a .csv.\n",
    "* Display the DataFrame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>City</th>\n",
       "      <th>Lat</th>\n",
       "      <th>Lon</th>\n",
       "      <th>Max Temp</th>\n",
       "      <th>Humidity</th>\n",
       "      <th>Cloudiness</th>\n",
       "      <th>High Winds</th>\n",
       "      <th>Country</th>\n",
       "      <th>Date</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>nikolskoye</td>\n",
       "      <td>59.70</td>\n",
       "      <td>30.79</td>\n",
       "      <td>21.99</td>\n",
       "      <td>73</td>\n",
       "      <td>0</td>\n",
       "      <td>0.65</td>\n",
       "      <td>RU</td>\n",
       "      <td>1584913738</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>brae</td>\n",
       "      <td>60.40</td>\n",
       "      <td>-1.35</td>\n",
       "      <td>42.80</td>\n",
       "      <td>81</td>\n",
       "      <td>100</td>\n",
       "      <td>21.92</td>\n",
       "      <td>GB</td>\n",
       "      <td>1584913738</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>hermanus</td>\n",
       "      <td>-34.42</td>\n",
       "      <td>19.23</td>\n",
       "      <td>62.01</td>\n",
       "      <td>89</td>\n",
       "      <td>67</td>\n",
       "      <td>1.01</td>\n",
       "      <td>ZA</td>\n",
       "      <td>1584913739</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>lavrentiya</td>\n",
       "      <td>65.58</td>\n",
       "      <td>-171.00</td>\n",
       "      <td>28.99</td>\n",
       "      <td>95</td>\n",
       "      <td>99</td>\n",
       "      <td>6.38</td>\n",
       "      <td>RU</td>\n",
       "      <td>1584913442</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>port hardy</td>\n",
       "      <td>50.70</td>\n",
       "      <td>-127.42</td>\n",
       "      <td>44.60</td>\n",
       "      <td>81</td>\n",
       "      <td>90</td>\n",
       "      <td>10.29</td>\n",
       "      <td>CA</td>\n",
       "      <td>1584913739</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         City    Lat     Lon  Max Temp  Humidity  Cloudiness  High Winds  \\\n",
       "0  nikolskoye  59.70   30.79     21.99        73           0        0.65   \n",
       "1        brae  60.40   -1.35     42.80        81         100       21.92   \n",
       "2    hermanus -34.42   19.23     62.01        89          67        1.01   \n",
       "3  lavrentiya  65.58 -171.00     28.99        95          99        6.38   \n",
       "4  port hardy  50.70 -127.42     44.60        81          90       10.29   \n",
       "\n",
       "  Country        Date  \n",
       "0      RU  1584913738  \n",
       "1      GB  1584913738  \n",
       "2      ZA  1584913739  \n",
       "3      RU  1584913442  \n",
       "4      CA  1584913739  "
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "city_data_df = pd.DataFrame(city_data)\n",
    "city_data_df.to_csv(output_data_file, index_label=\"City_ID\")\n",
    "lat = city_data_df.Lat\n",
    "max_temps = city_data_df[\"Max Temp\"]\n",
    "humidity = city_data_df.Humidity\n",
    "cloudiness = city_data_df.Cloudiness\n",
    "wind_speed = city_data_df[\"High Winds\"]\n",
    "city_data_df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Plotting the Data\n",
    "* Use proper labeling of the plots using plot titles (including date of analysis) and axes labels.\n",
    "* Save the plotted figures as .pngs."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Latitude vs. Temperature Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(lat,max_temps, edgecolor=\"black\", linewidths=1, alpha=0.8, label=\"Cities\")\n",
    "plt.title(\"City Latitude vs. Max Temperature (%s)\" % time.strftime(\"%x\"))\n",
    "plt.ylabel(\"Max Temperature (F)\")\n",
    "plt.xlabel(\"Latitude\")\n",
    "plt.grid(True)\n",
    "plt.savefig(\"output_data/Fig1.png\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Latitude vs. Humidity Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(lat,humidity, edgecolor=\"black\", linewidths=1, alpha=0.8, label=\"Cities\")\n",
    "plt.title(\"City Latitude vs. humidity (%s)\" % time.strftime(\"%x\"))\n",
    "plt.ylabel(\"humidity (F)\")\n",
    "plt.xlabel(\"Latitude\")\n",
    "plt.grid(True)\n",
    "plt.savefig(\"output_data/Fig1.png\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Latitude vs. Cloudiness Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "not all arguments converted during string formatting",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-30-fe53fc7bcb01>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mscatter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlat\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mcloudiness\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0medgecolor\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"black\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlinewidths\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0malpha\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.8\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"Cities\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtitle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"City Latitude vs. Cloudiness \"\u001b[0m \u001b[0;34m%\u001b[0m \u001b[0mtime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstrftime\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"%x\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mylabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Cloudiness (F)\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mxlabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Latitude\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgrid\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
      "\u001b[0;31mTypeError\u001b[0m: not all arguments converted during string formatting"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(lat,cloudiness, edgecolor=\"black\", linewidths=1, alpha=0.8, label=\"Cities\")\n",
    "plt.title(\"City Latitude vs. Cloudiness \" % time.strftime(\"%x\"))\n",
    "plt.ylabel(\"Cloudiness (F)\")\n",
    "plt.xlabel(\"Latitude\")\n",
    "plt.grid(True)\n",
    "plt.savefig(\"output_data/Fig1.png\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Latitude vs. Wind Speed Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-31-07b7356daefe>, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-31-07b7356daefe>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    plt.scatter(lat,High Winds, edgecolor=\"black\", linewidths=1, alpha=0.8, label=\"Cities\")\u001b[0m\n\u001b[0m                             ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "plt.scatter(lat,High Winds, edgecolor=\"black\", linewidths=1, alpha=0.8, label=\"Cities\")\n",
    "plt.title(\"City Latitude vs. High Winds\" % time.strftime(\"%x\"))\n",
    "plt.ylabel(\"High Winds (F)\")\n",
    "plt.xlabel(\"Latitude\")\n",
    "plt.grid(True)\n",
    "plt.savefig(\"output_data/Fig1.png\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernel_info": {
   "name": "python3"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  },
  "nteract": {
   "version": "0.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
